syntax = "proto3";

package cloud.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/common/error_reason.proto";
import "api/cloud/v1alpha1/message.proto";

option go_package = "api/cloud/v1alpha1;v1alpha1";

service CloudInterface {
      rpc Ping(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cloud/ping"
            };
      }

      // InstallKubeadmKubeletCriO
      rpc InstallKubeadmKubeletCriO(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/install_kubeadm_kubelet_crio"
              body: "*"
            };
      }

      // AddKubeletServiceAndSettingKubeadmConfig
      rpc AddKubeletServiceAndSettingKubeadmConfig(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/add_kubelet_service_and_setting_kubeadm_config"
              body: "*"
            };
      }

      // KubeadmJoin
      rpc KubeadmJoin(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/kubeadm_join"
              body: "*"
            };
      }

      // KubeadmInit
      rpc KubeadmInit(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/kubeadm_init"
              body: "*"
            };
      }

      // KubeadmReset
      rpc KubeadmReset(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/kubeadm_reset"
              body: "*"
            };
      }
      
      // KubeadmUpgrade
      rpc KubeadmUpgrade(cloud.v1alpha1.Cloud) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/kubeadm_upgrade"
              body: "*"
            };
      }
      
      // SetingIpv4Forward
      rpc SetingIpv4Forward(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/setting_ipv4_forward"
              body: "*"
            };
      }

      // CloseSwap
      rpc CloseSwap(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/close_swap"
              body: "*"
            };
      }

      // CloseFirewall
      rpc CloseFirewall(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cloud/close_firewall"
              body: "*"
            };
      }
}